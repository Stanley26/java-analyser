plugins {
    `java-library`
    application
}

group = "com.analyzer"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

dependencies {
    // Bibliothèque pour parser le code source Java
    implementation("com.github.javaparser:javaparser-symbol-solver-core:3.25.10")

    // Bibliothèque pour générer les rapports JSON
    implementation("com.fasterxml.jackson.core:jackson-databind:2.17.1")
    implementation("com.fasterxml.jackson.core:jackson-core:2.17.1")
    implementation("com.fasterxml.jackson.core:jackson-annotations:2.17.1")

    // Bibliothèque pour créer une application en ligne de commande (CLI) robuste
    implementation("info.picocli:picocli:4.7.6")
    annotationProcessor("info.picocli:picocli-codegen:4.7.6")

    // Dépendance pour les tests
    testImplementation(platform("org.junit:junit-bom:5.10.0"))
    testImplementation("org.junit.jupiter:junit-jupiter")
}

application {
    mainClass.set("com.analyzer.Main")
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}

tasks.withType<Test> {
    useJUnitPlatform()
}

// Configuration pour créer un "fat JAR" qui inclut toutes les dépendances
tasks.jar {
    manifest {
        attributes(
            "Main-Class" to "com.analyzer.Main"
        )
    }
    from(configurations.runtimeClasspath.get().map { if (it.isDirectory) it else zipTree(it) })
}
